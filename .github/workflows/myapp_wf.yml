
name: myapp-workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build_new_image:
    runs-on: ubuntu-latest
    outputs:
      out1: ${{ steps.set_new_version.outputs.verout }}
      out2: ${{ steps.set_new_version.outputs.name }}
    
    steps:
    - name: checkout
      uses: actions/checkout@v3
    - name: current_version
      run: |
        ls -la
        cat Version
    - name: increment version
      run: |
        bc <<< "1 + $(<Version)" > Version
        echo new vversion is $(cat Version)
    - name: set_output
      id: set_new_version
      run: |
        echo "name=value" >> $GITHUB_OUTPUT
        echo "vesion_output=$(cat Version)" >> $GITHUB_OUTPUT
    - name: echoes
      run: |
        cat Version

        echo 1 ${{ steps }}
        echo 2 step1 ${{ steps.set_new_version.outputs.verout }}
        echo 3 name ${{ steps.set_new_version.outputs.NAME }}
        echo 4  ${{steps.set_new_version.outputs.VEROUT}}
        echo 5 step1 ${{steps.set_new_version.outputs.verout}}
        echo 6  ${{ steps.set_new_version.outputs.VEROUT }}
        echo ---------
        echo ${{ steps.set_new_version.outputs }}
        echo ---------
        cat $(echo $GITHUB_OUTPUT)
        echo ---------
        echo ---------
        ls -la /home/runner/work/_temp/_runner_file_commands/
        cat /home/runner/work/_temp/_runner_file_commands/*

        export
        
    - name: Build the Docker image
      if: ${{ false }}  # disable for now
      run: docker build . --file Dockerfile --tag mastashoff/myapp:v$(cat Version)
      
    - name: login
      run: |
        echo ${{ github.event_name }}
        docker login --username mastashoff --password-stdin <<< "$DOCKER_TOKEN"
      #if: github.event_name == 'push'
      if: ${{ false }}  # disable for now
      env:
        DOCKER_USERNAME: ${{ secrets.MYAPP_DOCKER_USER }}
        DOCKER_TOKEN: ${{ secrets.MYAPP_DOCKER_TOKEN }}
    
    - name: push to docker hub 
      if: ${{ false }}  # disable for now
      run: docker push -a mastashoff/myapp




  update_manifest_for_deploy:
    if: ${{ false }}  # disable for now
    needs: build_new_image
    runs-on: ubuntu-latest
    
    steps:
      - name: checkout 
        env:
          USERNAME: ${{ github.actor }}
          PASSWORD: ${{ secrets.MYAPP_GH_TOKEN }}
        uses: actions/checkout@v3
        with:
          repository: mastashoff/myapp-to-k8s
          ssh-key: ${{ secrets.MYAPP_GH_TOKEN }}
        
    
      - name: update deploy version
        run: |
          #sed -i s~\/myapp\:.*~\/myapp\:v${{needs.build_new_image.outputs.output1}}~g k8s/deploy.yml
          echo variable_version is ${{needs.build_new_image.outputs.output1}}
      - name: git push 
        run: |
         git config --global user.email 'mastashoff@gmail.com'
         git config --global user.name 'Yury Y'
         git commit -am 'Update myapp image version to ${{ needs.build_new_image.outputs.output1 }}' && git push
